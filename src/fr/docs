## Retour d'exception

L'obfuscation du retour d'exception est une technique de programmation utilisée pour rendre le flux de contrôle d'un programme plus difficile à comprendre et à analyser en obfusquant les résultats de retour et en normalisant chaque méthode pour qu'elle ait une valeur de retour vide (void).

En résumé, cette technique remplace les instructions de retour normales par des blocs de gestion des exceptions qui rendent le flux de contrôle du programme moins prévisible.  Lorsqu'une exception est levée, le programme passe à un gestionnaire d'exception désigné, qui renvoie ensuite la valeur souhaitée ou effectue l'action prévue. Cela rend le code plus difficile à lire, analyser et inverser, offrant ainsi une certaine protection contre la falsification ou le piratage.

'''warning Cette technique d'obfuscation est encore expérimentale et peut ne pas compiler avec succès sur des programmes plus importants. Pour cette raison même, elle est désactivée par défaut. '''

## Configuration

```js
exceptionReturn {
    enabled: false
    exempt: []
}
```

## Examples

### Non obfusqué

```java
int number = callNumber();
 [...]
}

int callNumber() {
    return 1;
}
```

### Obfusqué
```java
try {
    callNumber();
} catch (IntNumberException ex) {
    int number = ex.getValue();
}

[...]

void callNumber() {
    throw new IntNumberException(1);
}
```
