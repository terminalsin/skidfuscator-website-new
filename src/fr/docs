## Condition de flux

Ce transformateur sert de première protection contre l'analyse de prédicat opaque. Pour empêcher l'analyse statique de détecter quel entier est un prédicat opaque, nous utilisons cet entier spécifique pour ajouter des conditions supplémentaires aux instructions "if" déjà existantes. Cela ajoute non seulement une sécurité supplémentaire à votre logiciel, mais cela entrave également le processus de désobfuscation et de décompilation de nombreux outils.

Comparé au transformateur d'exception de flux, ceci est une version beaucoup plus simplifiée qui ne gère qu'un seul cas particulier.

## Configuration

```js
flowCondition {
    enabled: true
    exempt: []
}
```

## Examples

#### Non obfusqué
```java
public static void main(String[] args) {
    int number = callNumber();

    if (number == 1) {
        System.out.println("Hello world");
    }
    /*[...]*/
}
/*[...]*/
```

#### Obfusqué
```java
public static void main(String[] args) {
    /*[...]*/
    label1: {
        while (true) {
            if (n ^ 0x8AF8EF8F == 0xA88FFA) {
                break;
            }

            n = n ^ 0x28847D;
            int number = callNumber();

            label2: {
                if (number != 1)
                    break label1;

                if (n ^ 0xAA9F8FFD != 0x989F7AF)
                    break label2;

                System.out.println("Hello world");
                break label1;
            }

            throw new IllegalStateException();
        }
    }
    /*[...]*/
}
/*[...]*/
```
