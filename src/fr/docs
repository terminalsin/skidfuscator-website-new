# Bibliothèques

Ahhh, nous les détestons tous, mais pour ne pas compromettre votre logiciel, nous devons les utiliser. Cela simplifie vos configurations et ainsi de suite. Heureusement, dans le plugin Maven, cela sera géré automatiquement. Cependant, c'est juste une autre chose sur notre liste de tâches pour le moment.

Pour ajouter des dépendances, c'est assez simple :
1. Créez un dossier appelé "libs"
2. Faites glisser toutes vos dépendances dans ce dossier
3. Ajoutez "-li=\<chemin vers le dossier\>" à votre commande d'exécution en ligne de commande pour Skidfuscator

Exemple :
```console
java -jar obfuscator-1.0.0-SNAPSHOT.jar -li=libs obfuscate FluffyClicker.jar
```
![Image d'exemple](https://i.imgur.com/AYxEoYp.png)

## How to get dependencies from a Gradle project ?

### Gradle Groovy

Add this task to your build.gradle file:
```groovy
task copyDeps(type: Copy) {
    from configurations.compile
    into 'libs'
}
```

Then run the task:
```console
gradlew copyDeps
```

### Gradle Kotlin

Add this task to your build.gradle.kts file:
```kotlin
tasks.register<Copy>("copyDeps") {
    from(configurations.compile)
    into("libs")
}
```

Then run the task:
```console
gradlew copyDeps
```

## How to get dependencies from a Maven project ?

Add this task to your pom.xml file:
```xml
<build>
    <plugins>
        <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>copy-dependencies</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>${project.build.directory}/libs</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>
```

Then run the task:
```console
mvn package
```
