## Commutation de flux

Ce transformateur spécifique cible exclusivement vos instructions "switch" pour obfusquer les variables, masquant ainsi les énumérations, les constantes et les cibles de chaînes de caractères. Cela est réalisé grâce à l'utilisation du prédicat opaque et d'un mécanisme de hachage spécial pour empêcher toute technique d'ingénierie inverse évidente.

## Configuration

```js
flowSwitch {
    enabled: true
    exempt: []
}
```

## Examples

#### Non obfusqué
```java
public static void main(String[] args) {
    int number = callNumber();

    switch (number) {
        case 1: 
            System.out.println("Oh no!");
            break;
        case 2: 
            System.out.println("Hello world!");
            break
        default: 
            throw new IllegalStateException("Something went wrong!");
    }
    /*[...]*/
}
/*[...]*/
```

#### Obfusqué
```java
public static void main(String[] args) {
    /*[...]*/
    int number = callNumber();

    switch (number ^ hash(n ^ 0x9932783)) {
        case 0x928EF8C: 
            System.out.println("Hello world!");
            break
        case 0x9873783: 
            System.out.println("Oh no!");
            break;
        default: 
            throw new IllegalStateException("Something went wrong!");
    }
    /*[...]*/
}
/*[...]*/
```
