## Annotatie encryptie

De annotatie encryptie transformeert elke tekenreeks en alle gehele getallen in aantekeningen in een specifieke methode oproep, met als doel deze te verbergen tijdens runtime. Dit kan praktisch zijn voor niet-gevoelige URL's, privésleutels enz...

::: waarschuwing
Je moet de klant niet vertrouwen als basis. Gelieve geen gebruik te maken van String encryptie als de enige bescherming voor uw software. Standaard moet je aannemen dat een getalenteerde reverse-engineer hier toegang toe kan krijgen met genoeg tijd en geduld.
:::


## Configuratie

```js
stringAnnotationEncryption {
    enabled: true
    exempt: []
}

intAnnotationEncryption {
    enabled: true
    exempt: []
}
```

## Voorbeelden

### Unobfuscated

```java
@SecretAnnotation(secret = "Super secret", secret2 = 1337)
public class Fancy {
    public String getSecret() {
        return this.getClass().getAnnotation(SecretAnnotation.class).secret();
    }

    public int getSecre2t() {
        return this.getClass().getAnnotation(SecretAnnotation.class).secret2();
    }
}
```

### Obfuscated

```java
@SecretAnnotation(secret = "oifjaioejaifjea9è!efèaefFEf==", secret2 = 0x9FE7FE7F)
public class Fancy {
    public String getSecret() {
        /* [...] */
        return this.aofheoafo(this.getClass().getAnnotation(SecretAnnotation.class).secret(), n ^ 0x997AF8F);
    }

    public int getSecre2t() {
        /* [...] */
        return this.getClass().getAnnotation(SecretAnnotation.class).secret2() ^ n ^ 0x90AF9F7;
    }

    /* [...] */
}
```
