# Biblioteki

Choć czasem budzą pewne frustracje, są nieodzownym elementem tworzenia oprogramowania Umożliwiają uproszczenie konfiguracji i innych zadań. Mamy nadzieję, że w przyszłości wtyczki Maven automatyzują proces obsługi bibliotek. Jednak jest to tylko jeden z wielu elementów na naszej liście rzeczy do zrobienia.

Dodawanie bibliotek jest całkiem proste:
1. Utwórz folder o nazwie "libs"
2. Przeciągnij wszystkie biblioteki do wspomnianego folderu
3. Dodaj "-li=<ścieżka do folderu>" do wiersza poleceń

Przykład:
```console
java -jar obfuscator-1.0.0-SNAPSHOT.jar -li=libs obfuscate FluffyClicker.jar
```
![Przykładowe zdjęcie](https://i.imgur.com/AYxEoYp.png)

## How to get dependencies from a Gradle project ?

### Gradle Groovy

Add this task to your build.gradle file:
```groovy
task copyDeps(type: Copy) {
    from configurations.compile
    into 'libs'
}
```

Then run the task:
```console
gradlew copyDeps
```

### Gradle Kotlin

Add this task to your build.gradle.kts file:
```kotlin
tasks.register<Copy>("copyDeps") {
    from(configurations.compile)
    into("libs")
}
```

Then run the task:
```console
gradlew copyDeps
```

## How to get dependencies from a Maven project ?

Add this task to your pom.xml file:
```xml
<build>
    <plugins>
        <plugin>
            <artifactId>maven-dependency-plugin</artifactId>
            <executions>
                <execution>
                    <id>copy-dependencies</id>
                    <phase>package</phase>
                    <goals>
                        <goal>copy-dependencies</goal>
                    </goals>
                    <configuration>
                        <outputDirectory>${project.build.directory}/libs</outputDirectory>
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>
</build>
```

Then run the task:
```console
mvn package
```
