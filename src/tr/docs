## Outliner

Dışarı çıkarma, bir methoddan kodu çıkartarak ayrı, bağımsız bir methoda yerleştirme işlemini yapar. Bu genellikle kodun okunabilirliğini ve geliştirebilirliğini artırmak için yapılır, çünkü methodu daha küçük, daha odaklanmış kod parçalarına bölmek, methodun ne yaptığını anlamayı kolaylaştırır.

Dışarı çıkarma, kodu tersine mühendislik yapmaya veya kodu anlamaya çalışan birinin programın genel akışını ve yapısını görmesini zorlaştırarak kod şifrelemesi olarak da kullanılabilir. Kodu daha küçük parçalara bölmek ve farklı methodlara ayırmak, birinin akışın farklı parçaları arasındaki ilişkileri anlamasını ve bu parçaların belirli bir işlevi nasıl gerçekleştirdiğini anlamasını daha zor bir hale getirebilir.

![Outlining graph explanation](https://i.imgur.com/2HMq0a4.png)

Dışarı çıkarma ile ilgili harika şey: *teknik olarak* geri döndürülemez olmasıdır! İyi bir dışarı çıkarmayı (outlining) şifrelemenin orijinal durumuna döndürebilmek için bir deobfuscator, *yöntem gömme (inlining)* yapmak zorundadır, ki bu sonucun her zaman orijinal kaynak koduyla aynı olucağını *garantilemez*. Ayrıca, bu şifreleme çözücünün(deobfuscator) değişkenlerle(integer) ve diğer çeşitli hassas bytecode manipülasyonlarıyla uğraşması gerektiğinden, hepsi hesaplama hatalarına sebep olabilir.

Yani dışarı çıkarma(outlining) şifrelemeyi genel olarak oldukça etkilleyen ve kullanışlı yapan bir yöntemdir :)

::: warning
Bu dışarı çıkartma dönüştürücüsü hala geliştirme aşamasındadır. Java doğrulayıcının çalışma şeklinden dolayı, bazı senaryoların doğru bir şekilde doğrulanamaması, bazı derleme sorunlarına yol açabilir. Lütfen kendi riskinizle kullanın ve herhangi bir sorun oluşursa lütfen bunları bildirin.

Kendime not: Stack çerçevelerinden nefret ediyorum
:::

## Yapılandırma Ayarı

```js
outliner {
     enabled: true
     exempt: []
}
```

## Örnekler

#### Şifrelenmemiş

```java
public static void main(String[] args) {
    int number = callNumber();
    /*[...]*/
}

static int callNumber() {
    return 1;
}
```

#### Şifrelenmiş
```java
public static void main(String[] args) {
    step1_AF8FZE8EF7Z89F();
    /*[...]*/
}

static void step1_AF8FZE8EF7Z89F() {
    int number = callNumber();
}


static int callNumber() {
    return 1;
}
```
